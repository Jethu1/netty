// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RichMan.proto

package practice5_Protobuf;

public final class RichManProto {
  private RichManProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RichManOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 id = 1;
    boolean hasId();
    int getId();
    
    // required string name = 2;
    boolean hasName();
    String getName();
    
    // optional string email = 3;
    boolean hasEmail();
    String getEmail();
    
    // repeated .netty.RichMan.Car cars = 4;
    java.util.List<RichMan.Car>
        getCarsList();
    RichMan.Car getCars(int index);
    int getCarsCount();
    java.util.List<? extends RichMan.CarOrBuilder>
        getCarsOrBuilderList();
    RichMan.CarOrBuilder getCarsOrBuilder(
            int index);
  }
  public static final class RichMan extends
      com.google.protobuf.GeneratedMessage
      implements RichManOrBuilder {
    // Use RichMan.newBuilder() to construct.
    private RichMan(Builder builder) {
      super(builder);
    }
    private RichMan(boolean noInit) {}
    
    private static final RichMan defaultInstance;
    public static RichMan getDefaultInstance() {
      return defaultInstance;
    }
    
    public RichMan getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RichManProto.internal_static_netty_RichMan_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RichManProto.internal_static_netty_RichMan_fieldAccessorTable;
    }
    
    public enum CarType
        implements com.google.protobuf.ProtocolMessageEnum {
      AUDI(0, 0),
      BENZ(1, 1),
      LAMBORGHINI(2, 2),
      DASAUTO(3, 3),
      ;
      
      public static final int AUDI_VALUE = 0;
      public static final int BENZ_VALUE = 1;
      public static final int LAMBORGHINI_VALUE = 2;
      public static final int DASAUTO_VALUE = 3;
      
      
      public final int getNumber() { return value; }
      
      public static CarType valueOf(int value) {
        switch (value) {
          case 0: return AUDI;
          case 1: return BENZ;
          case 2: return LAMBORGHINI;
          case 3: return DASAUTO;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<CarType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<CarType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<CarType>() {
              public CarType findValueByNumber(int number) {
                return CarType.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return RichMan.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final CarType[] VALUES = {
        AUDI, BENZ, LAMBORGHINI, DASAUTO, 
      };
      
      public static CarType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private CarType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:netty.RichMan.CarType)
    }
    
    public interface CarOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required string name = 1;
      boolean hasName();
      String getName();
      
      // optional .netty.RichMan.CarType type = 2 [default = BENZ];
      boolean hasType();
      CarType getType();
    }
    public static final class Car extends
        com.google.protobuf.GeneratedMessage
        implements CarOrBuilder {
      // Use Car.newBuilder() to construct.
      private Car(Builder builder) {
        super(builder);
      }
      private Car(boolean noInit) {}
      
      private static final Car defaultInstance;
      public static Car getDefaultInstance() {
        return defaultInstance;
      }
      
      public Car getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RichManProto.internal_static_netty_RichMan_Car_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RichManProto.internal_static_netty_RichMan_Car_fieldAccessorTable;
      }
      
      private int bitField0_;
      // required string name = 1;
      public static final int NAME_FIELD_NUMBER = 1;
      private Object name_;
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        Object ref = name_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            name_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // optional .netty.RichMan.CarType type = 2 [default = BENZ];
      public static final int TYPE_FIELD_NUMBER = 2;
      private CarType type_;
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public CarType getType() {
        return type_;
      }
      
      private void initFields() {
        name_ = "";
        type_ = CarType.BENZ;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, type_.getNumber());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, type_.getNumber());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @Override
      protected Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static Car parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static Car parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static Car parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static Car parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static Car parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static Car parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static Car parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static Car parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static Car parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static Car parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(Car prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements CarOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return RichManProto.internal_static_netty_RichMan_Car_descriptor;
        }
        
        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return RichManProto.internal_static_netty_RichMan_Car_fieldAccessorTable;
        }
        
        // Construct using practice5_Protobuf.RichManProto.RichMan.Car.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          type_ = CarType.BENZ;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return Car.getDescriptor();
        }
        
        public Car getDefaultInstanceForType() {
          return Car.getDefaultInstance();
        }
        
        public Car build() {
          Car result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private Car buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          Car result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public Car buildPartial() {
          Car result = new Car(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.type_ = type_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof Car) {
            return mergeFrom((Car)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(Car other) {
          if (other == Car.getDefaultInstance()) return this;
          if (other.hasName()) {
            setName(other.getName());
          }
          if (other.hasType()) {
            setType(other.getType());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                CarType value = CarType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  type_ = value;
                }
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required string name = 1;
        private Object name_ = "";
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public String getName() {
          Object ref = name_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setName(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        void setName(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
        }
        
        // optional .netty.RichMan.CarType type = 2 [default = BENZ];
        private CarType type_ = CarType.BENZ;
        public boolean hasType() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public CarType getType() {
          return type_;
        }
        public Builder setType(CarType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          type_ = value;
          onChanged();
          return this;
        }
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000002);
          type_ = CarType.BENZ;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:netty.RichMan.Car)
      }
      
      static {
        defaultInstance = new Car(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:netty.RichMan.Car)
    }
    
    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string email = 3;
    public static final int EMAIL_FIELD_NUMBER = 3;
    private Object email_;
    public boolean hasEmail() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getEmail() {
      Object ref = email_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          email_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getEmailBytes() {
      Object ref = email_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        email_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated .netty.RichMan.Car cars = 4;
    public static final int CARS_FIELD_NUMBER = 4;
    private java.util.List<Car> cars_;
    public java.util.List<Car> getCarsList() {
      return cars_;
    }
    public java.util.List<? extends CarOrBuilder>
        getCarsOrBuilderList() {
      return cars_;
    }
    public int getCarsCount() {
      return cars_.size();
    }
    public Car getCars(int index) {
      return cars_.get(index);
    }
    public CarOrBuilder getCarsOrBuilder(
        int index) {
      return cars_.get(index);
    }
    
    private void initFields() {
      id_ = 0;
      name_ = "";
      email_ = "";
      cars_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCarsCount(); i++) {
        if (!getCars(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getEmailBytes());
      }
      for (int i = 0; i < cars_.size(); i++) {
        output.writeMessage(4, cars_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getEmailBytes());
      }
      for (int i = 0; i < cars_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, cars_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static RichMan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static RichMan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static RichMan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static RichMan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static RichMan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static RichMan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static RichMan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static RichMan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static RichMan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static RichMan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(RichMan prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements RichManOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RichManProto.internal_static_netty_RichMan_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RichManProto.internal_static_netty_RichMan_fieldAccessorTable;
      }
      
      // Construct using practice5_Protobuf.RichManProto.RichMan.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCarsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        email_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (carsBuilder_ == null) {
          cars_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          carsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RichMan.getDescriptor();
      }
      
      public RichMan getDefaultInstanceForType() {
        return RichMan.getDefaultInstance();
      }
      
      public RichMan build() {
        RichMan result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private RichMan buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        RichMan result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public RichMan buildPartial() {
        RichMan result = new RichMan(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.email_ = email_;
        if (carsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            cars_ = java.util.Collections.unmodifiableList(cars_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.cars_ = cars_;
        } else {
          result.cars_ = carsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RichMan) {
          return mergeFrom((RichMan)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(RichMan other) {
        if (other == RichMan.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasEmail()) {
          setEmail(other.getEmail());
        }
        if (carsBuilder_ == null) {
          if (!other.cars_.isEmpty()) {
            if (cars_.isEmpty()) {
              cars_ = other.cars_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCarsIsMutable();
              cars_.addAll(other.cars_);
            }
            onChanged();
          }
        } else {
          if (!other.cars_.isEmpty()) {
            if (carsBuilder_.isEmpty()) {
              carsBuilder_.dispose();
              carsBuilder_ = null;
              cars_ = other.cars_;
              bitField0_ = (bitField0_ & ~0x00000008);
              carsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCarsFieldBuilder() : null;
            } else {
              carsBuilder_.addAllMessages(other.cars_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        for (int i = 0; i < getCarsCount(); i++) {
          if (!getCars(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              email_ = input.readBytes();
              break;
            }
            case 34: {
              Car.Builder subBuilder = Car.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCars(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // required string name = 2;
      private Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
      }
      
      // optional string email = 3;
      private Object email_ = "";
      public boolean hasEmail() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getEmail() {
        Object ref = email_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          email_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setEmail(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        email_ = value;
        onChanged();
        return this;
      }
      public Builder clearEmail() {
        bitField0_ = (bitField0_ & ~0x00000004);
        email_ = getDefaultInstance().getEmail();
        onChanged();
        return this;
      }
      void setEmail(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        email_ = value;
        onChanged();
      }
      
      // repeated .netty.RichMan.Car cars = 4;
      private java.util.List<Car> cars_ =
        java.util.Collections.emptyList();
      private void ensureCarsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cars_ = new java.util.ArrayList<Car>(cars_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          Car, Car.Builder, CarOrBuilder> carsBuilder_;
      
      public java.util.List<Car> getCarsList() {
        if (carsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cars_);
        } else {
          return carsBuilder_.getMessageList();
        }
      }
      public int getCarsCount() {
        if (carsBuilder_ == null) {
          return cars_.size();
        } else {
          return carsBuilder_.getCount();
        }
      }
      public Car getCars(int index) {
        if (carsBuilder_ == null) {
          return cars_.get(index);
        } else {
          return carsBuilder_.getMessage(index);
        }
      }
      public Builder setCars(
          int index, Car value) {
        if (carsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarsIsMutable();
          cars_.set(index, value);
          onChanged();
        } else {
          carsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setCars(
          int index, Car.Builder builderForValue) {
        if (carsBuilder_ == null) {
          ensureCarsIsMutable();
          cars_.set(index, builderForValue.build());
          onChanged();
        } else {
          carsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addCars(Car value) {
        if (carsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarsIsMutable();
          cars_.add(value);
          onChanged();
        } else {
          carsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addCars(
          int index, Car value) {
        if (carsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarsIsMutable();
          cars_.add(index, value);
          onChanged();
        } else {
          carsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addCars(
          Car.Builder builderForValue) {
        if (carsBuilder_ == null) {
          ensureCarsIsMutable();
          cars_.add(builderForValue.build());
          onChanged();
        } else {
          carsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addCars(
          int index, Car.Builder builderForValue) {
        if (carsBuilder_ == null) {
          ensureCarsIsMutable();
          cars_.add(index, builderForValue.build());
          onChanged();
        } else {
          carsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllCars(
          Iterable<? extends Car> values) {
        if (carsBuilder_ == null) {
          ensureCarsIsMutable();
          super.addAll(values, cars_);
          onChanged();
        } else {
          carsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearCars() {
        if (carsBuilder_ == null) {
          cars_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          carsBuilder_.clear();
        }
        return this;
      }
      public Builder removeCars(int index) {
        if (carsBuilder_ == null) {
          ensureCarsIsMutable();
          cars_.remove(index);
          onChanged();
        } else {
          carsBuilder_.remove(index);
        }
        return this;
      }
      public Car.Builder getCarsBuilder(
          int index) {
        return getCarsFieldBuilder().getBuilder(index);
      }
      public CarOrBuilder getCarsOrBuilder(
          int index) {
        if (carsBuilder_ == null) {
          return cars_.get(index);  } else {
          return carsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends CarOrBuilder>
           getCarsOrBuilderList() {
        if (carsBuilder_ != null) {
          return carsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cars_);
        }
      }
      public Car.Builder addCarsBuilder() {
        return getCarsFieldBuilder().addBuilder(
            Car.getDefaultInstance());
      }
      public Car.Builder addCarsBuilder(
          int index) {
        return getCarsFieldBuilder().addBuilder(
            index, Car.getDefaultInstance());
      }
      public java.util.List<Car.Builder>
           getCarsBuilderList() {
        return getCarsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Car, Car.Builder, CarOrBuilder>
          getCarsFieldBuilder() {
        if (carsBuilder_ == null) {
          carsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Car, Car.Builder, CarOrBuilder>(
                  cars_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          cars_ = null;
        }
        return carsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:netty.RichMan)
    }
    
    static {
      defaultInstance = new RichMan(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:netty.RichMan)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_netty_RichMan_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_netty_RichMan_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_netty_RichMan_Car_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_netty_RichMan_Car_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\rRichMan.proto\022\005netty\"\322\001\n\007RichMan\022\n\n\002id" +
      "\030\001 \002(\005\022\014\n\004name\030\002 \002(\t\022\r\n\005email\030\003 \001(\t\022 \n\004c" +
      "ars\030\004 \003(\0132\022.netty.RichMan.Car\032?\n\003Car\022\014\n\004" +
      "name\030\001 \002(\t\022*\n\004type\030\002 \001(\0162\026.netty.RichMan" +
      ".CarType:\004BENZ\";\n\007CarType\022\010\n\004AUDI\020\000\022\010\n\004B" +
      "ENZ\020\001\022\017\n\013LAMBORGHINI\020\002\022\013\n\007DASAUTO\020\003B\"\n\022p" +
      "ractice5_ProtobufB\014RichManProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_netty_RichMan_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_netty_RichMan_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_netty_RichMan_descriptor,
              new String[] { "Id", "Name", "Email", "Cars", },
              RichMan.class,
              RichMan.Builder.class);
          internal_static_netty_RichMan_Car_descriptor =
            internal_static_netty_RichMan_descriptor.getNestedTypes().get(0);
          internal_static_netty_RichMan_Car_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_netty_RichMan_Car_descriptor,
              new String[] { "Name", "Type", },
              RichMan.Car.class,
              RichMan.Car.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
